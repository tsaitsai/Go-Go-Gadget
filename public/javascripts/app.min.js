app=angular.module("goGoGadget",["ngRoute","ngMaterial"]),app.config(["$routeProvider","$locationProvider","$httpProvider","$mdThemingProvider",function(e,t,o,a){t.html5Mode(!0),e.when("/home",{templateUrl:"/views/gadgethome.html",controller:"gadgetGameRep"}).when("/game",{templateUrl:"/views/gadgetreport.html",controller:"gadgetGameRep"}).when("/automation",{templateUrl:"/views/gadgetauto.html",controller:"gadgetAutomation"}).when("/testroutes",{templateUrl:"/views/testroutes.html",controller:"testRoutes"}).otherwise({redirectTo:"/home"}),a.theme("default").primaryPalette("light-blue").accentPalette("orange")}]),app.controller("gadgetGameRep",["$scope","$http","$location","$timeout",function(e,t,o,a){t({method:"GET",url:"/gogogadget/score"}).then(function(t){t.data.forEach(function(t,o){switch(t.name){case"itm_num_G1_HandLeft_Score":e.leftHand=t;break;case"itm_num_G1_HandRight_Score":e.rightHand=t;break;case"itm_num_G1_FootLeft_Score":e.leftFoot=t;break;case"itm_num_G1_FootRight_Score":e.rightFoot=t;break;case"itm_num_G1_Ear_Score":e.ear=t;break;case"itm_num_G1_Nose_Score":e.nose=t}})}),e.updateMode=function(){t({method:"POST",url:"/gogogadget/mode",data:{mode:e.mode}}).then(function(e){})},e.updateLang=function(){t({method:"POST",url:"/gogogadget/setlanguage",data:{lang:e.lang}}).then(function(e){})},e.onClickAuto=function(){o.url("/automation")},e.onClickPlay=function(){o.url("/game")},e.readImages=function(){t({method:"GET",url:"/gogogadget/image"}).then(function(t){console.log(t.data),e.gameMode=t.data.mode,e.imgurl=e.objectURL[t.data.imgurl]})},e.objectURL={12:"/images/ch_ear_big.png"},e.readImages();setInterval(e.readImages(),5e3)}]),app.service("scoreFormat",function(){}),app.controller("testRoutes",["$scope","$http","$location",function(e,t,o){e.mode="",e.testmode=function(){console.log(e.mode);var o={mode:e.mode};t({method:"POST",url:"/gogogadget/mode",data:o}).then(function(e){console.log("response from server",e)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImdhZGdldEdhbWUuanMiLCJzZXJ2aWNlcy5qcyIsInRlc3RSb3V0ZXMuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkaHR0cFByb3ZpZGVyIiwiJG1kVGhlbWluZ1Byb3ZpZGVyIiwiaHRtbDVNb2RlIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIm90aGVyd2lzZSIsInJlZGlyZWN0VG8iLCJ0aGVtZSIsInByaW1hcnlQYWxldHRlIiwiYWNjZW50UGFsZXR0ZSIsIiRzY29wZSIsIiRodHRwIiwiJGxvY2F0aW9uIiwiJHRpbWVvdXQiLCJtZXRob2QiLCJ1cmwiLCJ0aGVuIiwicmVzIiwiZGF0YSIsImZvckVhY2giLCJpdGVtIiwiaW5kZXgiLCJuYW1lIiwibGVmdEhhbmQiLCJyaWdodEhhbmQiLCJsZWZ0Rm9vdCIsInJpZ2h0Rm9vdCIsImVhciIsIm5vc2UiLCJ1cGRhdGVNb2RlIiwibW9kZSIsInVwZGF0ZUxhbmciLCJsYW5nIiwib25DbGlja0F1dG8iLCJvbkNsaWNrUGxheSIsInJlYWRJbWFnZXMiLCJjb25zb2xlIiwibG9nIiwiZ2FtZU1vZGUiLCJpbWd1cmwiLCJvYmplY3RVUkwiLCIxMiIsInNldEludGVydmFsIiwic2VydmljZSIsInRlc3Rtb2RlIl0sIm1hcHBpbmdzIjoiQUFBQUEsSUFBQUMsUUFBQUMsT0FBQSxjQUFBLFVBQUEsZUFFQUYsSUFBQUcsUUFBQSxpQkFBQSxvQkFBQSxnQkFBQSxxQkFDQSxTQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUNBRixFQUFBRyxXQUFBLEdBRUFKLEVBQ0FLLEtBQUEsU0FDQUMsWUFBQSx5QkFDQUMsV0FBQSxrQkFFQUYsS0FBQSxTQUNBQyxZQUFBLDJCQUNBQyxXQUFBLGtCQUdBRixLQUFBLGVBQ0FDLFlBQUEseUJBQ0FDLFdBQUEscUJBRUFGLEtBQUEsZUFDQUMsWUFBQSx5QkFDQUMsV0FBQSxlQUVBQyxXQUNBQyxXQUFBLFVBR0FOLEVBQUFPLE1BQUEsV0FDQUMsZUFBQSxjQUNBQyxjQUFBLGFDOUJBaEIsSUFBQVcsV0FBQSxpQkFBQSxTQUFBLFFBQUEsWUFBQSxXQUFBLFNBQUFNLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0FGLEdBQ0FHLE9BQUEsTUFDQUMsSUFBQSxzQkFDQUMsS0FBQSxTQUFBQyxHQUNBQSxFQUFBQyxLQUFBQyxRQUFBLFNBQUFDLEVBQUFDLEdBQ0EsT0FBQUQsRUFBQUUsTUFDQSxJQUFBLDRCQUNBWixFQUFBYSxTQUFBSCxDQUNBLE1BQ0EsS0FBQSw2QkFDQVYsRUFBQWMsVUFBQUosQ0FDQSxNQUNBLEtBQUEsNEJBQ0FWLEVBQUFlLFNBQUFMLENBQ0EsTUFDQSxLQUFBLDZCQUNBVixFQUFBZ0IsVUFBQU4sQ0FDQSxNQUNBLEtBQUEsdUJBQ0FWLEVBQUFpQixJQUFBUCxDQUNBLE1BQ0EsS0FBQSx3QkFDQVYsRUFBQWtCLEtBQUFSLE9BTUFWLEVBQUFtQixXQUFBLFdBQ0FsQixHQUNBRyxPQUFBLE9BQ0FDLElBQUEsbUJBQ0FHLE1BQUFZLEtBQUFwQixFQUFBb0IsUUFDQWQsS0FBQSxTQUFBQyxPQUlBUCxFQUFBcUIsV0FBQSxXQUNBcEIsR0FDQUcsT0FBQSxPQUNBQyxJQUFBLDBCQUNBRyxNQUFBYyxLQUFBdEIsRUFBQXNCLFFBQ0FoQixLQUFBLFNBQUFDLE9BSUFQLEVBQUF1QixZQUFBLFdBQ0FyQixFQUFBRyxJQUFBLGdCQUdBTCxFQUFBd0IsWUFBQSxXQUNBdEIsRUFBQUcsSUFBQSxVQUdBTCxFQUFBeUIsV0FBQSxXQUNBeEIsR0FDQUcsT0FBQSxNQUNBQyxJQUFBLHNCQUNBQyxLQUFBLFNBQUFDLEdBQ0FtQixRQUFBQyxJQUFBcEIsRUFBQUMsTUFDQVIsRUFBQTRCLFNBQUFyQixFQUFBQyxLQUFBWSxLQUNBcEIsRUFBQTZCLE9BQUE3QixFQUFBOEIsVUFBQXZCLEVBQUFDLEtBQUFxQixXQUlBN0IsRUFBQThCLFdBQ0FDLEdBQUEsMEJBRUEvQixFQUFBeUIsWUFDQU8sYUFBQWhDLEVBQUF5QixhQUFBLFFDdEVBMUMsSUFBQWtELFFBQUEsY0FBQSxjQ0FBbEQsSUFBQVcsV0FBQSxjQUFBLFNBQUEsUUFBQSxZQUFBLFNBQUFNLEVBQUFDLEVBQUFDLEdBQ0FGLEVBQUFvQixLQUFBLEdBQ0FwQixFQUFBa0MsU0FBQSxXQUNBUixRQUFBQyxJQUFBM0IsRUFBQW9CLEtBQ0EsSUFBQVosSUFDQVksS0FBQXBCLEVBQUFvQixLQUVBbkIsSUFDQUcsT0FBQSxPQUNBQyxJQUFBLG1CQUNBRyxLQUFBQSxJQUNBRixLQUFBLFNBQUFDLEdBQ0FtQixRQUFBQyxJQUFBLHVCQUFBcEIiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImFwcCA9IGFuZ3VsYXIubW9kdWxlKCdnb0dvR2FkZ2V0JywgWyduZ1JvdXRlJywgJ25nTWF0ZXJpYWwnXSk7XG5cbmFwcC5jb25maWcoWyckcm91dGVQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsICckaHR0cFByb3ZpZGVyJywgJyRtZFRoZW1pbmdQcm92aWRlcicsXG4gICAgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlciwgJGh0dHBQcm92aWRlciwgJG1kVGhlbWluZ1Byb3ZpZGVyKSB7XG4gICAgICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxuICAgICAgICAkcm91dGVQcm92aWRlci5cbiAgICAgICAgICAgIHdoZW4oJy9ob21lJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2dhZGdldGhvbWUuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2dhZGdldEdhbWVSZXAnXG4gICAgICAgICAgICB9KS5cbiAgICAgICAgICAgIHdoZW4oJy9nYW1lJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2dhZGdldHJlcG9ydC5odG1sJyxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZ2FkZ2V0R2FtZVJlcCdcbiAgICAgICAgICAgIH0pLlxuXG4gICAgICAgICAgICB3aGVuKCcvYXV0b21hdGlvbicsIHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9nYWRnZXRhdXRvLmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnYWRnZXRBdXRvbWF0aW9uJ1xuICAgICAgICAgICAgfSkuXG4gICAgICAgICAgICB3aGVuKCcvdGVzdHJvdXRlcycsIHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy90ZXN0cm91dGVzLmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICd0ZXN0Um91dGVzJ1xuICAgICAgICAgICAgfSkuXG4gICAgICAgICAgICBvdGhlcndpc2Uoe1xuICAgICAgICAgICAgICAgIHJlZGlyZWN0VG86ICcvaG9tZSdcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICRtZFRoZW1pbmdQcm92aWRlci50aGVtZSgnZGVmYXVsdCcpXG4gICAgICAgICAgICAucHJpbWFyeVBhbGV0dGUoJ2xpZ2h0LWJsdWUnKVxuICAgICAgICAgICAgLmFjY2VudFBhbGV0dGUoJ29yYW5nZScpO1xuICAgIH1dKTtcblxuIiwiYXBwLmNvbnRyb2xsZXIoJ2dhZGdldEdhbWVSZXAnLCBbJyRzY29wZScsICckaHR0cCcsICckbG9jYXRpb24nLCAnJHRpbWVvdXQnLCBmdW5jdGlvbigkc2NvcGUsJGh0dHAsJGxvY2F0aW9uLCR0aW1lb3V0KXtcbiAgJGh0dHAoe1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgdXJsOiAnL2dvZ29nYWRnZXQvc2NvcmUnXG4gIH0pLnRoZW4oZnVuY3Rpb24ocmVzKXtcbiAgICByZXMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGluZGV4KXtcbiAgICAgIHN3aXRjaCAoaXRlbS5uYW1lKXtcbiAgICAgICAgY2FzZSAnaXRtX251bV9HMV9IYW5kTGVmdF9TY29yZSc6XG4gICAgICAgICAgJHNjb3BlLmxlZnRIYW5kID0gaXRlbTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaXRtX251bV9HMV9IYW5kUmlnaHRfU2NvcmUnOlxuICAgICAgICAgICRzY29wZS5yaWdodEhhbmQgPSBpdGVtO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdpdG1fbnVtX0cxX0Zvb3RMZWZ0X1Njb3JlJzpcbiAgICAgICAgICAkc2NvcGUubGVmdEZvb3QgPSBpdGVtO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdpdG1fbnVtX0cxX0Zvb3RSaWdodF9TY29yZSc6XG4gICAgICAgICAgJHNjb3BlLnJpZ2h0Rm9vdCA9IGl0ZW07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2l0bV9udW1fRzFfRWFyX1Njb3JlJzpcbiAgICAgICAgICAkc2NvcGUuZWFyID0gaXRlbTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaXRtX251bV9HMV9Ob3NlX1Njb3JlJzpcbiAgICAgICAgICAkc2NvcGUubm9zZSA9IGl0ZW07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcblxuICAkc2NvcGUudXBkYXRlTW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICRodHRwKHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgdXJsOiAnL2dvZ29nYWRnZXQvbW9kZScsXG4gICAgICBkYXRhOiB7bW9kZTogJHNjb3BlLm1vZGV9XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXMpe1xuICAgIH0pXG4gIH07XG5cbiAgJHNjb3BlLnVwZGF0ZUxhbmcgPSBmdW5jdGlvbigpIHtcbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIHVybDogJy9nb2dvZ2FkZ2V0L3NldGxhbmd1YWdlJyxcbiAgICAgIGRhdGE6IHtsYW5nOiAkc2NvcGUubGFuZ31cbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlcyl7XG4gICAgfSlcbiAgfTtcblxuICAkc2NvcGUub25DbGlja0F1dG8gPSBmdW5jdGlvbigpIHtcbiAgICAkbG9jYXRpb24udXJsKCcvYXV0b21hdGlvbicpO1xuICAgIH07XG5cbiAgJHNjb3BlLm9uQ2xpY2tQbGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgJGxvY2F0aW9uLnVybCgnL2dhbWUnKTtcbiAgfTtcblxuICAkc2NvcGUucmVhZEltYWdlcyA9IGZ1bmN0aW9uKCkge1xuICAgICRodHRwKHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICB1cmw6ICcvZ29nb2dhZGdldC9pbWFnZSdcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlcyl7XG4gICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7XG4gICAgICAkc2NvcGUuZ2FtZU1vZGUgPSByZXMuZGF0YS5tb2RlO1xuICAgICAgJHNjb3BlLmltZ3VybCA9ICRzY29wZS5vYmplY3RVUkxbcmVzLmRhdGEuaW1ndXJsXTtcbiAgICB9KVxuICB9XG5cbiAgJHNjb3BlLm9iamVjdFVSTCA9IHtcbiAgICAnMTInOiAnL2ltYWdlcy9jaF9lYXJfYmlnLnBuZydcbiAgfTtcbiAgJHNjb3BlLnJlYWRJbWFnZXMoKTtcbiAgdmFyIGltYWdlID0gc2V0SW50ZXJ2YWwoJHNjb3BlLnJlYWRJbWFnZXMoKSwgNTAwMCk7XG59XSk7XG4iLCJhcHAuc2VydmljZSgnc2NvcmVGb3JtYXQnLCBmdW5jdGlvbigpe1xuXG59KTtcbiIsImFwcC5jb250cm9sbGVyKCd0ZXN0Um91dGVzJywgWyckc2NvcGUnLCAnJGh0dHAnLCAnJGxvY2F0aW9uJywgZnVuY3Rpb24oJHNjb3BlLCRodHRwLCRsb2NhdGlvbil7XG4gICRzY29wZS5tb2RlID0gJyc7XG4gICRzY29wZS50ZXN0bW9kZSA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coJHNjb3BlLm1vZGUpXG4gICAgdmFyIGRhdGEgPSB7XG4gICAgICBtb2RlOiAkc2NvcGUubW9kZVxuICAgIH1cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIHVybDogJy9nb2dvZ2FkZ2V0L21vZGUnLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzKXtcbiAgICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZSBmcm9tIHNlcnZlcicsIHJlcyk7XG4gICAgfSlcbiAgfVxufV0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
